module frinx-qos-extension {

  yang-version "1";

  // namespace
  namespace "http://frinx.openconfig.net/yang/qos/extension";

  prefix "oc-qos-ext";

  // import some basic types
  import frinx-openconfig-qos { prefix oc-qos; }
  import yang-ext { prefix ext; }
  // uniconfig imports
  import network-topology { prefix nt; revision-date "2013-10-21"; }
  import frinx-uniconfig-topology { prefix ut; revision-date "2017-11-21"; }

  // meta
  organization "Frinx s.r.o";

  contact
    "support@frinx.io";

  description
    "Set of augments needed to OpenConfig QoS models.";

  revision "2018-03-04" {
    description
      "Initial release";
    reference "3.1.3";
  }

  typedef precedence {
    type union {
      type uint8;
      type string;
    }
    description "Precedence values.";
  }

  typedef qos-group-range {
    type string {
      // <number>..<number>
      pattern '(\d+)\.\.(\d+)';
    }
  }

  typedef qos-group {
    type union {
      type uint32;
      type qos-group-range;
    }
  }

  typedef dscp-enumeration {
      type enumeration {
        enum af11;
        enum af12;
        enum af13;
        enum af21;
        enum af22;
        enum af23;
        enum af31;
        enum af32;
        enum af33;
        enum af41;
        enum af42;
        enum af43;
        enum cs1;
        enum cs2;
        enum cs3;
        enum cs4;
        enum cs5;
        enum cs6;
        enum cs7;
        enum default;
        enum ef;
      }
  }

  typedef dscp-number {
    type uint8 {
      range "0..63";
    }
  }

  typedef dscp-value {
    type union {
      type dscp-enumeration;
      type dscp-number;
    }
  }

  typedef cos-value {
    type uint8 {
      range "0..7";
    }
  }

  typedef dei-value {
    type uint8 {
      range "0..1";
    }
  }

  grouping qos-scheduler-actions {
    leaf cos {
      type cos-value;
      description
        "Rewrite packet cos and send it.";
    }

    leaf dei {
      type dei-value;
      description
        "Rewrite packet dei and send it.";
    }

    leaf dscp {
      type dscp-value;
      description
        "Set dscp and send it.";
    }

    leaf qos {
      type qos-group;
      description
        "Set qos-group and send it.";
    }

    leaf transmit {
      type boolean;
      description
        "Transmit packet if true.";
    }
  }

  grouping qos-condition-dscp-config {
    container dscp {
      list dscp-list {
        leaf-list dscp-value-list {
          ordered-by user;
          type dscp-value;
          description "List of the DSCP (Differentiated services code point)";
        }
      }
    }
  }

  grouping qos-condition-cos-config {
    container cos {
      list cos-list {
        leaf inner {
          type boolean;
          description "Inner tag to match flag";
        }

        leaf-list cos-value-list {
          ordered-by user;
          type cos-value;
          description "List of the CoS (Class of Service) values";
        }
      }
    }
  }

  // augment statements
  augment "/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions" {
    ext:augment-identifier "qos-condition-aug";
    description "Adds QoS Group to conditions";

    leaf-list qos-group {
      ordered-by user;
      type qos-group;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for both ipv4 and ipv6";
    }

    uses qos-condition-dscp-config;
    uses qos-condition-cos-config;
  }

  augment "/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions/oc-qos:ipv4/oc-qos:config" {
    ext:augment-identifier "qos-ipv4-condition-aug";
    description "Adds reference to ACL to Ipv4 conditions";

    leaf acl-ref {
      type string;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for ipv4.";
    }
  }

  augment "/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions/oc-qos:ipv6/oc-qos:config" {
    ext:augment-identifier "qos-ipv6-condition-aug";
    description "Adds QoS Group and reference to ACL to Ipv6 conditions";

    leaf acl-ref {
      type string;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for ipv6.";
    }
  }

  augment "/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:actions/oc-qos:remark/oc-qos:config" {
    ext:augment-identifier "qos-remark-qos-group-aug";
    description "Adds QoS Group to packet-match actions remarks";

    leaf-list set-qos-group {
      ordered-by user;
      type qos-group;
    }

    leaf-list set-precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for both ipv4 and ipv6.";
    }
  }

  augment "/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:one-rate-two-color/oc-qos:config" {
    ext:augment-identifier "qos-max-queue-depth-ms-aug";
    description "Adds QoS maximum queue depth in miliseconds";

    leaf max-queue-depth-ms {
      type uint32;
      units ms;
      description
        "When the scheduler is specified to be a shaper - the
        maximum depth of the queue in miliseconds is the value
        specified by this leaf.";
    }
  }

  augment "/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:inputs/oc-qos:input/oc-qos:config" {
    ext:augment-identifier "qos-cos-aug";
    description "Adds CoS (Class of Service)";

    leaf cos {
      type cos-value;
      description "CoS (Class of Service) value";
    }
  }

  augment "/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:conform-action/oc-qos:config" {
    ext:augment-identifier "qos-conform-action-aug";
    description "Adds conform actions to scheduler";

    uses qos-scheduler-actions;
  }

  augment "/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:exceed-action/oc-qos:config" {
    ext:augment-identifier "qos-exceed-action-aug";
    description "Adds exceed actions to scheduler";

    uses qos-scheduler-actions;
  }

  // uniconfig augmentations
  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions" {
    description "Adds QoS Group to conditions";

    leaf-list qos-group {
      ordered-by user;
      type qos-group;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for both ipv4 and ipv6.";
    }

    uses qos-condition-dscp-config;
    uses qos-condition-cos-config;
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions/oc-qos:ipv4/oc-qos:config" {
    description "Adds reference to ACL to Ipv4 conditions";

    leaf acl-ref {
      type string;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for ipv4.";
    }
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:conditions/oc-qos:ipv6/oc-qos:config" {
    description "Adds reference to ACL to Ipv6 conditions";

    leaf acl-ref {
      type string;
    }

    leaf-list precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for ipv6.";
    }
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:classifiers/oc-qos:classifier/oc-qos:terms/oc-qos:term/oc-qos:actions/oc-qos:remark/oc-qos:config" {
    description "Adds QoS Group to packet-match actions remarks";

    leaf-list set-qos-group {
      ordered-by user;
      type qos-group;
    }

    leaf-list set-precedences {
      ordered-by user;
      type precedence;
      description "List of precedences valid for both ipv4 and ipv6.";
    }
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:one-rate-two-color/oc-qos:config" {
    description "Adds QoS maximum queue depth in miliseconds";

    leaf max-queue-depth-ms {
      type uint32;
      units ms;
      description
        "When the scheduler is specified to be a shaper - the
        maximum depth of the queue in miliseconds is the value
        specified by this leaf.";
    }
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:inputs/oc-qos:input/oc-qos:config" {
    description "Adds CoS (Class of Service)";

    leaf cos {
      type cos-value;
      description "CoS (Class of Service) value";
    }
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:conform-action/oc-qos:config" {
    description "Adds conform actions to scheduler";

    uses qos-scheduler-actions;
  }

  augment "/nt:network-topology/nt:topology/nt:node/ut:configuration/oc-qos:qos/oc-qos:scheduler-policies/oc-qos:scheduler-policy/oc-qos:schedulers/oc-qos:scheduler/oc-qos:two-rate-three-color/oc-qos:exceed-action/oc-qos:config" {
    description "Adds exceed actions to scheduler";

    uses qos-scheduler-actions;
  }
}
